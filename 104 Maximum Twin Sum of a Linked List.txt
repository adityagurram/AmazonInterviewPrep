/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public int PairSum(ListNode head) {
     
        //ALgo goes like this.
        //convert this linkedlist of array
        //loop thu half the list and find the sum (arr[i],arr[ n-1-i])
    
        List<int> arr= new List<int>();
        
        while (head !=null)
        {
            arr.Add (head.val);
            head= head.next;
        }
        
        int max=0;
        int n= arr.Count ();
        for(int i=0; i< arr.Count () /2; i++)
        {
         max= Math.Max (max, arr[i] + arr[n-1-i]);   
        }
        
        return max;
    }
}