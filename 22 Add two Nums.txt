/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        
        int carry =0;
        
        ListNode result= new ListNode();
        if(l1==null && l2== null ) return null;
        
        if(l1==null && l2!=null) return l2;
        if(l1!=null && l2==null) return l1;
    
        ListNode dummy= result;
        while (l1!=null && l2!=null)
        {
            int num1= l1.val;
            int num2= l2.val;
            int sum=0;
            if((num1 + num2 + carry) >9)
            {
             
             sum= (num1 + num2 + carry) %10;  
             carry= 1;
            }
            else
            {
               
                sum= num1+ num2+ carry;
                 carry =0;
            }
            
            ListNode newNode= new ListNode ();
            newNode.val=sum;
            result.next= newNode;
            result= newNode;
           
            l1= l1.next;
            l2= l2.next;
        }
        
        
        while (l1!=null)
        {
             ListNode newNode= new ListNode ();
            int sum=0;
            if(l1.val + carry > 9)
            {
                sum= (l1.val + carry )%10;
                carry=1;
            }
            else
            {
                sum= l1.val + carry;
                carry =0;
            }
            newNode.val= sum;
            result.next= newNode;
            result= newNode;
            l1= l1.next;
        }
        
       while (l2!=null)
        {
             ListNode newNode= new ListNode ();
            int sum=0;
            if(l2.val + carry > 9)
            {
                sum= (l2.val + carry )%10;
                carry=1;
            }
            else
            {
                sum= l2.val + carry;
                carry =0;
            }
            newNode.val= sum;
            result.next= newNode;
            result= newNode;
            l2= l2.next;
        }
        
        if(carry==1)
        {
              ListNode newNode= new ListNode ();
            newNode.val= 1;
            result.next= newNode;
            result= newNode;
            
        }
        
        return dummy.next;
    }
}