/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode list1, ListNode list2) {
     
     ListNode result = new ListNode();
            ListNode dummy = result;
    
        if(list1==null && list2==null) return null;
        
        
        if(list1==null && list2!=null) return list2;
        if(list1!=null && list2==null) return list1;
        
        while (list1!=null && list2!=null)
        {
            int newVal=0;
            if(list1.val < list2.val)
            {
                newVal= list1.val;
                 list1= list1.next;
         
            }
            else
            {
                newVal= list2.val;
                   list2= list2.next;
            }
            
            ListNode newNode = new ListNode ();
            newNode.val= newVal;
            dummy.next= newNode;
            dummy= newNode;
            
           
            
            
        }
        
        while (list1!=null)
        {
            ListNode newNode = new ListNode ();
            newNode.val= list1.val;
            dummy.next= newNode;
            dummy= newNode;
            list1=list1.next;
        }
        
         while (list2!=null)
        {
            ListNode newNode = new ListNode ();
            newNode.val= list2.val;
            dummy.next= newNode;
            dummy= newNode;
             list2= list2.next;
        }
        
        return result.next;
    }
}