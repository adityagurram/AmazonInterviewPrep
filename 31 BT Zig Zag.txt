/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<IList<int>> ZigzagLevelOrder(TreeNode root) {
        
        IList<IList<int>> result= new List<IList<int>>();
        
        if(root == null)
            return result;
        
        Queue<TreeNode> q= new Queue<TreeNode> ();
        q.Enqueue (root);
        int level=1;
        
        while (q.Count () > 0)
        {
            int qCount= q.Count ();
            List<int> tempList= new List<int> ();
            for(int i=0; i< qCount; i++)
            {
                TreeNode temp= q.Dequeue ();
                
                if(temp.left!=null)
                {
                    q.Enqueue(temp.left);
                }
                
                if(temp.right !=null)
                {
                    q.Enqueue (temp.right);
                }
                tempList.Add (temp.val);
                
                
            }
            
            if(level%2==0)
            {
                tempList.Reverse();
            }
            
            result.Add (tempList);
            level ++;
        }
        
        return result;
    }
}