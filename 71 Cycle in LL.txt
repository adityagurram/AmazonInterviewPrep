/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public bool HasCycle(ListNode head) {
        
        if(head==null) return false;
        ListNode fast= head.next;
        ListNode slow= head;
        
        while (fast != null && fast.next!=null && slow!=null)
        {
                       
            if(fast==slow)
            {
                 return true;
            }
            fast= fast.next.next;
            slow= slow.next;
        }
        
        return false;
    }
}