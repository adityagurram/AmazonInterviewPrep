public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        
        int row=-1;
        for(int i=0; i< matrix.Length ; i++)
        {
            if(target >= matrix[i][0] && target <= matrix [i][matrix[0].Length -1])
            {
                row=i;
                break;
            }
        }
        
        if(row==-1)
        {
             return false;
        }
        else
        {
            for(int j=0; j< matrix[row].Length; j++)
            {
                 if(matrix[row][j]== target)
                 {
                     return true;
                 }
            }
            
        }
        
    return false;
        
    }
}


public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        
        int row=-1;
        for(int i=0; i< matrix.Length ; i++)
        {
            if(target >= matrix[i][0] && target <= matrix [i][matrix[0].Length -1])
            {
                row=i;
                break;
            }
        }
        
        if(row==-1)
        {
             return false;
        }
        
        //let's do a binary search
        int start=0;
        int end =matrix[row].Length -1;
        
        while (start <= end)
        {
            int mid = start + (end-start)/2;
            
            if(matrix [row][mid]== target)
            {
                 return true;
            }
            else if ( matrix [row][mid]< target)
            {
                 start = mid +1;
            }
            else
            {
                 end = mid-1;
            }
        }
        
    return false;
        
    }
}