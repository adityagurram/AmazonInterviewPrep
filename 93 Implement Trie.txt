

public class Trie {

    public class Node {
    char c;
  public  bool isWord;
   public  Node [] children;
    
    public Node (char c)
    {
        this.c= c;
        isWord= false;
        children= new Node [128];
    }
    
}
    
    Node root;
    public Trie() {
        root = new Node ('$');
    }
    
    public void Insert(string word) {
        
        Node curr= root;
        
        for(int i=0; i< word.Length ; i++)
        {
            char c= word[i];
            if(curr.children[c]==null)
            {
                curr.children[c]= new Node (c);
            }
            curr= curr.children[c];
        }
        
        curr.isWord= true;
    }
    
    private Node GetNode (string word)
    {
        
        Node curr= root;
        
        for(int i=0; i< word.Length ; i++)
        {
            char c= word[i];
            if(curr.children[c]==null)
            {
               return null;
            }
            else
            {
                 curr= curr.children[c];
            }
           
        }
        
        return curr;
        
    }
    
    public bool Search(string word) {
        Node node= GetNode(word);
        
        if(node ==null)
        {
             return false;
        }
        return node.isWord;
    }
    
    public bool StartsWith(string prefix) {
        
        Node node= GetNode (prefix);
        if(node==null)
        {
             return false;
        }
        
        return true;
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.Insert(word);
 * bool param_2 = obj.Search(word);
 * bool param_3 = obj.StartsWith(prefix);
 */